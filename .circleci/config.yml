# Copyright (c) 2020 The Wagerr Core developers
version: 2.1
jobs:
  lint_all:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: x86_64-linux-gnu
      JOBS: 4
    steps:
    - run:
        command: |
            apt-get -y update
            apt-get -y install python-pip
            git clone --depth 1 https://github.com/wagerr/wagerr .
            source .circleci/lint_04_install.sh
            source .circleci/lint_05_before_script.sh
            # LevelDB
            git remote add -f leveldb https://github.com/bitcoin-core/leveldb.git
            # secp256k1
            git remote add -f secp256k1 https://github.com/bitcoin-core/secp256k1.git
            # univalue
            git remote add -f univalue https://github.com/jgarzik/univalue
            git rm -rf src/leveldb
            git rm -rf src/secp256k1
            git rm -rf src/univalue
            git add .
            git config --global user.email "lint@dev.null"
            git config --global user.name "Lint Check"
            git commit -m "Set up for subtrees"
            # leveldb
            git subtree add --prefix src/leveldb leveldb bitcoin-fork --squash
            # secp256k1
            git subtree add --prefix src/secp256k1 secp256k1 master --squash
            # univalue
            git subtree add --prefix src/univalue univalue 9f0b9975925b202ab130714e5422f8dd8bf40ac3 --squash
            source .circleci/lint_06_script.sh
  x86_64_bionic_depends:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: x86_64-linux-gnu
      JOBS: 4
    steps:
      - checkout
      - restore_cache:
          keys: 
          - wagerr-bionic-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            if [ -d /root/project/depends/x86_64-linux gnu ]; then
              exit
            else
              git submodule update --init --recursive
              apt-get -y update
              apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 gcc-8 g++-8 libpython3.6-dev python3-distutils
              update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
              update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
              update-alternatives --install /usr/bin/${HOST}-gcc ${HOST}-gcc /usr/bin/${HOST}-gcc-8 100
              update-alternatives --install /usr/bin/${HOST}-g++ ${HOST}-g++ /usr/bin/${HOST}-g++-8 100
              make -j ${JOBS} -C depends HOST=${HOST}
            fi
      - save_cache:
          key: wagerr-bionic-depends-{{ .Branch }}-{{ .Revision }}
          paths:
            - /root/project/depends/built
            - /root/project/depends/sources
            - /root/project/depends/x86_64-linux-gnu
            - /root/project/depends/work
  x86_64_bionic:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: x86_64-linux-gnu
      JOBS: 4
    steps:
      - checkout
      - restore_cache:
          keys: 
          - wagerr-bionic-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            git submodule update --init --recursive
            apt-get -y update
            apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 gcc-8 g++-8 libpython3.6-dev python3-distutils
            update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
            update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
            update-alternatives --install /usr/bin/${HOST}-gcc ${HOST}-gcc /usr/bin/${HOST}-gcc-8 100
            update-alternatives --install /usr/bin/${HOST}-g++ ${HOST}-g++ /usr/bin/${HOST}-g++-8 100
            ./autogen.sh
            ./configure --host=${HOST} --prefix=`pwd`/depends/${HOST} --enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++
            make -j ${JOBS}
            # make -j {$JOBS} check
            #src/test/test_wagerr
            #src/qt/test/test_wagerr-qt
            test/functional/test_runner.py
  i686_bionic_depends:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: i686-linux-gnu
      JOBS: 4
    steps:
      - checkout
      - restore_cache:
          keys: 
          - wagerr-i686-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            if [ -d depends/i686-linux-gnu ]; then
              exit
            else
              git submodule update --init --recursive
              apt-get -y update
              apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 g++-8-multilib gcc-8-multilib gcc-8-i686-linux-gnu g++-8-i686-linux-gnu
              update-alternatives --install /usr/bin/gcc gcc /usr/bin/i686-linux-gnu-gcc-8 100
              update-alternatives --install /usr/bin/g++ g++ /usr/bin/i686-linux-gnu-g++-8 100
              make -j${JOBS} -C depends HOST=${HOST}
            fi
      - save_cache:
          key: wagerr-i686-depends-{{ .Branch }}-{{ .Revision }}
          paths:
            - /root/project/depends/built
            - /root/project/depends/sources
            - /root/project/depends/i686-linux-gnu
            - /root/project/depends/work
  i686_bionic:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: i686-linux-gnu
      JOBS: 4
    steps:
      - checkout
      - restore_cache:
          keys: 
          - wagerr-i686-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            git submodule update --init --recursive
            apt-get -y update
            apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 g++-8-multilib gcc-8-multilib gcc-8-i686-linux-gnu g++-8-i686-linux-gnu
            update-alternatives --install /usr/bin/gcc gcc /usr/bin/i686-linux-gnu-gcc-8 100
            update-alternatives --install /usr/bin/g++ g++ /usr/bin/i686-linux-gnu-g++-8 100
            ./autogen.sh
            ./configure --host=${HOST} --prefix=`pwd`/depends/${HOST} --enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++
            make -j ${JOBS}
            #make -j ${JOBS} check
            #src/test/test_wagerr
            #src/qt/test/test_wagerr-qt
  x86_64_focal_depends:
    docker:
      - image: circleci/buildpack-deps:20.04
        user: root
    environment:
      HOST: x86_64-linux-gnu
      JOBS: 4
    steps:
      - checkout
      - restore_cache:
          keys: 
          - wagerr-focal-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            if [ -d depends/x86_64-linux-gnu ]; then
              exit
            else
              git submodule update --init --recursive
              apt-get -y update
              apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 g++-8-multilib gcc-8-multilib gcc-8 g++-8
              update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
              update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
              update-alternatives --install /usr/bin/${HOST}-gcc ${HOST}-gcc /usr/bin/${HOST}-gcc-8 100
              update-alternatives --install /usr/bin/${HOST}-g++ ${HOST}-g++ /usr/bin/${HOST}-g++-8 100
              make -j${JOBS} -C depends HOST=${HOST}
            fi
      - save_cache:
          key: wagerr-focal-depends-{{ .Branch }}-{{ .Revision }}
          paths:
            - /root/project/depends/built
            - /root/project/depends/sources
            - /root/project/depends/x86_64-linux-gnu
            - /root/project/depends/work
  x86_64_focal:
    docker:
      - image: circleci/buildpack-deps:20.04
        user: root
    environment:
      HOST: x86_64-linux-gnu
      JOBS: 4
    steps:
      - checkout
      - restore_cache:
          keys: 
          - wagerr-focal-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            git submodule update --init --recursive
            apt-get -y update
            apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 g++-8-multilib gcc-8-multilib gcc-8 g++-8
            update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
            update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
            update-alternatives --install /usr/bin/${HOST}-gcc ${HOST}-gcc /usr/bin/${HOST}-gcc-8 100
            update-alternatives --install /usr/bin/${HOST}-g++ ${HOST}-g++ /usr/bin/${HOST}-g++-8 100
            ./autogen.sh
            ./configure --host=${HOST} --prefix=`pwd`/depends/${HOST} --enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++
            make -j${JOBS}
            #make -j${JOBS} check
            #src/test/test_wagerr
            #src/qt/test/test_wagerr-qt
  arm32_bionic_depends:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: arm-linux-gnueabihf
      JOBS: 4
      HOST_LDFLAGS: "-static-libstdc++"
    steps:
      - checkout
      - restore_cache:
          keys: 
          - arm32-bionic-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            git submodule update --init --recursive
            apt-get -y update
            apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 gcc-8 g++-8 g++-8-arm-linux-gnueabihf gcc-8-arm-linux-gnueabihf binutils-arm-linux-gnueabihf g++-8-multilib gcc-8-multilib
            update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
            update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
            update-alternatives --install /usr/bin/${HOST}-gcc ${HOST}-gcc /usr/bin/${HOST}-gcc-8 100
            update-alternatives --install /usr/bin/${HOST}-g++ ${HOST}-g++ /usr/bin/${HOST}-g++-8 100
            make -j${JOBS} -C depends HOST=${HOST}
      - save_cache:
          key: arm32-bionic-depends-{{ .Branch }}-{{ .Revision }}
          paths:
            - /root/project/depends/built
            - /root/project/depends/sources
            - /root/project/depends/arm-linux-gnueabihf
            - /root/project/depends/work
  arm32_bionic:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: arm-linux-gnueabihf
      JOBS: 4
      HOST_LDFLAGS: "-static-libstdc++"
    steps:
      - checkout
      - restore_cache:
          keys: 
          - arm32-bionic-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            git submodule update --init --recursive
            apt-get -y update
            apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 gcc-8 g++-8 g++-8-arm-linux-gnueabihf gcc-8-arm-linux-gnueabihf binutils-arm-linux-gnueabihf g++-8-multilib gcc-8-multilib
            update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
            update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
            update-alternatives --install /usr/bin/${HOST}-gcc ${HOST}-gcc /usr/bin/${HOST}-gcc-8 100
            update-alternatives --install /usr/bin/${HOST}-g++ ${HOST}-g++ /usr/bin/${HOST}-g++-8 100
            ./autogen.sh
            ./configure --host=${HOST} --prefix=`pwd`/depends//${HOST} --enable-glibc-back-compat --enable-reduce-exports --disable-ccache --disable-maintainer-mode --disable-dependency-tracking CFLAGS="${HOST_CFLAGS}" CXXFLAGS="${HOST_CXXFLAGS}" LDFLAGS="${HOST_LDFLAGS}"
            make -j${JOBS}
  arm64_bionic_depends:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: aarch64-linux-gnu
      JOBS: 4
    steps:
      - checkout
      - restore_cache:
          keys: 
          - arm64-bionic-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            if [ -d depends/aarch64-linux-gnu ]; then
              exit
            else
              git submodule update --init --recursive
              apt-get -y update
              apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 gcc-8 g++-8 g++-8-aarch64-linux-gnu gcc-8-aarch64-linux-gnu binutils-aarch64-linux-gnu g++-8-multilib gcc-8-multilib
              update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
              update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
              update-alternatives --install /usr/bin/${HOST}-gcc ${HOST}-gcc /usr/bin/${HOST}-gcc-8 100
              update-alternatives --install /usr/bin/${HOST}-g++ ${HOST}-g++ /usr/bin/${HOST}-g++-8 100
              make -j${JOBS} -C depends
            fi
      - save_cache:
          key: arm64-bionic-depends-{{ .Branch }}-{{ .Revision }}
          paths:
            - /root/project/depends/built
            - /root/project/depends/sources
            - /root/project/depends/aarch64-linux-gnu
            - /root/project/depends/work
  arm64_bionic:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: aarch64-linux-gnu
      JOBS: 4
    steps:
      - checkout
      - restore_cache:
          keys: 
          - arm64-bionic-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            git submodule update --init --recursive
            apt-get -y update
            apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 gcc-8 g++-8 g++-8-aarch64-linux-gnu gcc-8-aarch64-linux-gnu binutils-aarch64-linux-gnu g++-8-multilib gcc-8-multilib
            update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
            update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
            update-alternatives --install /usr/bin/${HOST}-gcc ${HOST}-gcc /usr/bin/${HOST}-gcc-8 100
            update-alternatives --install /usr/bin/${HOST}-g++ ${HOST}-g++ /usr/bin/${HOST}-g++-8 100
            ./autogen.sh
            ./configure --host=${HOST} --prefix=`pwd`/depends/${HOST} --enable-glibc-back-compat --enable-reduce-exports
            make -j${JOBS}
  win32_bionic_depends:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: i686-w64-mingw32
      JOBS: 4
    steps:
      - checkout
      - restore_cache:
          keys: 
          - win32-bionic-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            if [ -d depends/i686-w64-mingw32 ]; then
              exit
            else
              git submodule update --init --recursive
              apt-get -y update
              apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 mingw-w64 g++-mingw-w64 g++-multilib gcc-multilib
              update-alternatives --install /usr/bin/i686-w64-mingw32-gcc i686-w64-mingw32-gcc /usr/bin/i686-w64-mingw32-gcc-posix 100
              update-alternatives --install /usr/bin/i686-w64-mingw32-g++ i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix 100
              make -j${JOBS} -C depends HOST=${HOST}
            fi
      - save_cache:
          key: win32-bionic-depends-{{ .Branch }}-{{ .Revision }}
          paths:
            - /root/project/depends/built
            - /root/project/depends/sources
            - /root/project/depends/i686-w64-mingw32
            - /root/project/depends/work
  win32_bionic:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: i686-w64-mingw32
      JOBS: 4
    steps:
      - checkout
      - restore_cache:
          keys: 
          - win32-bionic-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            git submodule update --init --recursive
            apt-get -y update
            apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 mingw-w64 g++-mingw-w64 g++-multilib gcc-multilib
            update-alternatives --install /usr/bin/i686-w64-mingw32-gcc i686-w64-mingw32-gcc /usr/bin/i686-w64-mingw32-gcc-posix 100
            update-alternatives --install /usr/bin/i686-w64-mingw32-g++ i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix 100
            ./autogen.sh
            ./configure --host=${HOST} --prefix=`pwd`/depends/${HOST} --enable-reduce-exports
            make -j${JOBS}
  win64_bionic_depends:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: x86_64-w64-mingw32
      JOBS: 4
    steps:
      - checkout
      - restore_cache:
          keys: 
          - win64-bionic-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          no_output_timeout: 30m
          command: |
            if [ -d depends/x86_64-w64-mingw32 ]; then
              exit
            else
              git submodule update --init --recursive
              apt-get -y update
              apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 mingw-w64 g++-mingw-w64 g++-multilib gcc-multilib
              update-alternatives --install /usr/bin/x86_64-w64-mingw32-gcc x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix 100
              update-alternatives --install /usr/bin/x86_64-w64-mingw32-g++ x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix 100
              make -j${JOBS} -C depends HOST=${HOST}
            fi
      - save_cache:
          key: win64-bionic-depends-{{ .Branch }}-{{ .Revision }}
          paths:
            - /root/project/depends/built
            - /root/project/depends/sources
            - /root/project/depends/x86_64-w64-mingw32
            - /root/project/depends/work
  win64_bionic:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: x86_64-w64-mingw32
      JOBS: 4
    steps:
      - checkout
      - restore_cache:
          keys: 
          - win64-bionic-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            git submodule update --init --recursive
            apt-get -y update
            apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 mingw-w64 g++-mingw-w64 g++-multilib gcc-multilib
            update-alternatives --install /usr/bin/x86_64-w64-mingw32-gcc x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix 100
            update-alternatives --install /usr/bin/x86_64-w64-mingw32-g++ x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix 100
            ./autogen.sh
            ./configure --host=${HOST} --prefix=`pwd`/depends/${HOST} --enable-reduce-exports
            make -j${JOBS}
  mac_bionic_depends:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: x86_64-apple-darwin16
      JOBS: 4
      OSX_SDK: 10.11
    steps:
      - checkout
      - restore_cache:
          keys: 
          - mac-bionic-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            if [ -d depends/x86_64-apple-darwin16 ]; then
              exit
            else
              git submodule update --init --recursive
              apt-get -y update
              apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 librsvg2-bin libtiff-tools imagemagick libcap-dev libz-dev libbz2-dev python3-dev python3-setuptools fonts-tuffy g++-8-multilib gcc-8-multilib
              wget https://github.com/gitianuser/MacOSX-SDKs/releases/download/MacOSX10.11.sdk/MacOSX10.11.sdk.tar.xz
              mkdir -p `pwd`/depends/SDKs
              echo "Extracting Mac SDK"
              tar -C `pwd`/depends/SDKs -xJf ./MacOSX10.11.sdk.tar.xz
              make -j${JOBS} -C depends HOST=${HOST}
            fi
      - save_cache:
          key: mac-bionic-depends-{{ .Branch }}-{{ .Revision }}
          paths:
            - /root/project/depends/built
            - /root/project/depends/sources
            - /root/project/depends/SDKs
            - /root/project/depends/x86_64-apple-darwin16
            - /root/project/depends/work
  mac_bionic:
    docker:
      - image: circleci/buildpack-deps:18.04
        user: root
    environment:
      HOST: x86_64-apple-darwin16
      JOBS: 4
      OSX_SDK: 10.11
    steps:
      - checkout
      - restore_cache:
          keys: 
          - mac-bionic-depends-{{ .Branch }}-{{ .Revision }}
      - run:
          command: |
            git submodule update --init --recursive
            apt-get -y update
            apt-get -y install pkg-config autoconf libtool automake bsdmainutils ca-certificates python3 cmake libxkbcommon0 librsvg2-bin libtiff-tools imagemagick libcap-dev libz-dev libbz2-dev python3-dev python3-setuptools fonts-tuffy g++-8-multilib gcc-8-multilib
            ./autogen.sh
            ./configure --host=${HOST} --prefix=`pwd`/depends/${HOST} --enable-reduce-exports --enable-werror --disable-ccache --disable-maintainer-mode --disable-dependency-tracking
            make -j${JOBS}
  snapcraft_build:
    docker:
      - image: cibuilds/snapcraft:core18
    steps:
      - checkout
      - run:
          command: snapcraft
workflows:
  version: 2.1
  FullCheck:
    jobs:
      - lint_all
      - x86_64_bionic_depends:
          requires:
            - lint_all
      - x86_64_bionic:
          requires:
            - x86_64_bionic_depends
      - i686_bionic_depends:
          requires:
            - lint_all
      - i686_bionic:
          requires:
            - i686_bionic_depends
      - x86_64_focal_depends:
          requires:
            - lint_all
      - x86_64_focal:
          requires:
            - x86_64_focal_depends
      - arm32_bionic_depends:
          requires:
            - lint_all
      - arm32_bionic:
          requires:
            - arm32_bionic_depends
      - arm64_bionic_depends:
          requires:
            - lint_all
      - arm64_bionic:
          requires:
            - arm64_bionic_depends
      - win32_bionic_depends:
          requires:
            - lint_all
      - win32_bionic:
          requires:
            - win32_bionic_depends
      - win64_bionic_depends:
          requires:
            - lint_all
      - win64_bionic:
          requires:
            - win64_bionic_depends
      - mac_bionic_depends:
          requires:
            - lint_all
      - mac_bionic:
          requires:
            - mac_bionic_depends
      #- snapcraft_build:
      #    requires:
      #      - lint_all
