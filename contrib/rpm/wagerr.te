policy_module(wagerr, 1.100.1)

########################################
#
# Declarations
#

type wagerr_t;
type wagerr_exec_t;
init_daemon_domain(wagerr_t, wagerr_exec_t)

permissive wagerr_t;

type wagerr_initrc_exec_t;
init_script_file(wagerr_initrc_exec_t)

type wagerr_conf_t;
files_type(wagerr_conf_t)

type wagerr_var_lib_t;
files_type(wagerr_var_lib_t)

type wagerr_var_run_t;
files_type(wagerr_var_run_t)

type wagerr_port_t;
corenet_port(wagerr_port_t)

########################################
#
# wagerr local policy
#
allow wagerr_t self:process { fork };

allow wagerr_t self:fifo_file rw_fifo_file_perms;
allow wagerr_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(wagerr_t, wagerr_conf_t, wagerr_conf_t)
manage_files_pattern(wagerr_t, wagerr_conf_t, wagerr_conf_t)

manage_dirs_pattern(wagerr_t, wagerr_var_lib_t, wagerr_var_lib_t)
manage_files_pattern(wagerr_t, wagerr_var_lib_t, wagerr_var_lib_t)
files_var_lib_filetrans(wagerr_t, wagerr_var_lib_t, { dir file })

manage_dirs_pattern(wagerr_t, wagerr_var_run_t, wagerr_var_run_t)
manage_files_pattern(wagerr_t, wagerr_var_run_t, wagerr_var_run_t)

sysnet_dns_name_resolve(wagerr_t)
corenet_all_recvfrom_unlabeled(wagerr_t)

allow wagerr_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(wagerr_t)
corenet_tcp_sendrecv_generic_node(wagerr_t)
corenet_tcp_sendrecv_all_ports(wagerr_t)
corenet_tcp_bind_generic_node(wagerr_t)

gen_require(`
    type wagerr_port_t;
')
allow wagerr_t wagerr_port_t:tcp_socket name_bind;

gen_require(`
    type wagerr_port_t;
')
allow wagerr_t wagerr_port_t:tcp_socket name_connect;

domain_use_interactive_fds(wagerr_t)

files_read_etc_files(wagerr_t)

miscfiles_read_localization(wagerr_t)

sysnet_dns_name_resolve(wagerr_t)

allow wagerr_t wagerr_exec_t:file execute_no_trans;
allow wagerr_t self:process setsched;
corecmd_exec_ls(wagerr_t)
corenet_tcp_connect_http_port(wagerr_t)
dev_read_urand(wagerr_t)
fs_getattr_xattr_fs(wagerr_t)
kernel_read_system_state(wagerr_t)
