name: wagerr
version: master
summary:   peer-to-peer network based digital currency
description: |
  Wagerr is a free open source peer-to-peer electronic cash system that
  is completely decentralized, without the need for a central server or
  trusted parties.  Users hold the crypto keys to their own money and
  transact directly with each other, with the help of a P2P network to
  check for double-spending.

grade: devel
confinement: strict

apps:
  daemon:
    command: wagerrd
    plugs: [network, network-bind]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
    aliases: [wagerrd]
  qt:
    command: desktop-launch wagerr-qt
    plugs: [network, network-bind, unity7, desktop, desktop-legacy, wayland, x11]
    aliases: [wagerr-qt]
    desktop: wagerr.desktop
  cli:
    command: wagerr-cli
    aliases: [wagerr-cli]

parts:
  wagerr:
    source: https://github.com/wagerr/wagerr
    source-type: git
    source-tag: master
    plugin: autotools
    # XXX We don't want to copy the full blockchain every time that the snap is
    # updated, but there's no way to define a default data dir in bitcoin-qt.
    # Also, it would be better if we could split the wallet from the blockchain
    prepare: git apply $SNAPCRAFT_STAGE/default_data_dir.patch
    build-packages:
      - g++
      - pkg-config
      - libssl-dev
      - libevent-dev
      - bsdmainutils
      # Boost.
      - libboost-system-dev
      - libboost-filesystem-dev
      - libboost-chrono-dev
      - libboost-program-options-dev
      - libboost-test-dev
      - libboost-thread-dev
      # Optional.
      - libminiupnpc-dev
      - libzmq3-dev
      # GUI.
      - libqt5gui5
      - libqt5core5a
      - libqt5dbus5
      - qttools5-dev
      - qttools5-dev-tools
      - libprotobuf-dev
      - protobuf-compiler
      # Files from the build host were migrated into the snap to satisfy dependencies that would otherwise not be met. This feature will be removed in a future release thats why we need to include them here
      - libxcursor-dev
      - libxinerama-dev
      - libxrandr-dev
      - libatk1.0-dev
      #- libgdk2.0-cil
      - libgtk2.0-dev
      # Optional.
      - libqrencode-dev
    stage-packages: [ca-certificates]
    after:
      - berkeleydb
      - desktop-qt5
      - patches
  desktop-qt5:
    stage-packages:
      - libxkbcommon0
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - shared-mime-info
      - libqt5gui5
      - libgdk-pixbuf2.0-0
      - libqt5svg5 # for loading icon themes which are svg
      - locales-all
      - qtwayland5
  berkeleydb:
    source: http://download.oracle.com/berkeley-db/db-4.8.30.tar.gz
    plugin: nil
    build: |
      # Apply a patch necessary when building with clang and c++11 (see https://community.oracle.com/thread/3952592)
      CLANG_CXX11_PATCH_URL='https://gist.githubusercontent.com/LnL7/5153b251fd525fe15de69b67e63a6075/raw/7778e9364679093a32dec2908656738e16b6bdcb/clang.patch'
      CLANG_CXX11_PATCH_HASH='7a9a47b03fd5fb93a16ef42235fa9512db9b0829cfc3bdf90edd3ec1f44d637c'
      wget --no-check-certificate "${CLANG_CXX11_PATCH_URL}" -O "clang.patch"
      echo "${CLANG_CXX11_PATCH_HASH} clang.patch" | sha256sum -c
      patch -p2 < clang.patch
      cp $SNAPCRAFT_STAGE/../depends/config.guess ./dist
      cp $SNAPCRAFT_STAGE/../depends/config.sub ./dist
      cd build_unix
      ../dist/configure --enable-cxx --disable-shared --disable-replication --with-pic --prefix=$SNAPCRAFT_PART_INSTALL "${@}"
    install: |
      cd build_unix
      make install
    prime:
      - -*
  patches:
    source: snap/patches
    plugin: dump
    prime:
      - -*
  desktop:
    source: snap/gui
    plugin: dump
